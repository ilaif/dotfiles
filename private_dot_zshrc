# FORPROFILING:
PROFILING_ENABLED=0
if [[ "$PROFILING_ENABLED" == "1" ]]; then
  zmodload zsh/zprof
fi
timezsh() {
  shell=${1-$SHELL}
  for i in $(seq 1 4); do /usr/bin/time $shell -i -c exit; done
}

fpath=(~/ $fpath)

if type brew &>/dev/null; then
  FPATH=/usr/local/share/zsh/site-functions:$FPATH

  autoload -Uz compinit
  for dump in ~/.zcompdump(N.mh+24); do
    compinit
  done
  compinit -C
fi

export PATH=$HOME/.tmux/plugins/t-smart-tmux-session-manager/bin:$PATH

export TERM="xterm-256color"

export ZSH=$HOME/.oh-my-zsh
ZSH_THEME="muse"
DISABLE_MAGIC_FUNCTIONS=true
ZSH_DISABLE_COMPFIX=true

plugins=(
  git
  zsh-completions
  zsh-autosuggestions
  zsh-syntax-highlighting
  zsh-histdb
  colored-man-pages
  brew
  python
  virtualenv
  colorize
  github
  macos
  npm
  nvm
  node
  docker
  docker-compose
  aws
  kubectl
  poetry
)

PATH="$HOME/.local/bin:$PATH"
export PATH="/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/git/bin:/tools:/platform-tools:$HOME/bin:$PATH"
source $ZSH/oh-my-zsh.sh

eval "$(starship init zsh)"

# Zioxide
eval "$(zoxide init zsh)"

# histdb fzf
source ~/.oh-my-zsh/custom/plugins/zsh-histdb-fzf/fzf-histdb.zsh
bindkey '^R' histdb-fzf-widget

# Alias
alias pastejson='pbpaste | python -m json.tool'
alias dc='docker-compose'
alias ktx='kubectx'
alias kns='kubens'
alias docker-prune='docker system df && docker container prune -f && docker system prune -f && \
    docker rmi $(docker images -q) ; docker system df';
alias gitb='git branch --sort=-committerdate'
alias todate='date -r '
alias proj='sh $HOME/.open-ide.sh'
alias gcloud-login='gcloud auth login; gcloud auth application-default login'
alias pip-uninstall-all='pip uninstall -y -r <(pip freeze)'
alias docker-stop-all='docker stop $(docker ps -q)'
alias gs='git status'
alias wo='workon'
alias gitco='git checkout'
alias gitca='git commit -am'
alias glgn="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias mk='minikube'
alias pr_create='gitbprune && gh prx create'
alias git-latest-tag='git describe --tags $(git rev-list --tags --max-count=1)'
alias port_process='port_process $1'
alias cat='bat'
alias vim='nvim'

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

function port_process() {
    PORT=$1
    lsof -i tcp:${PORT}
}
function gcof() {
  git for-each-ref --format='%(refname:short)' refs/heads | fzf | xargs git checkout
}
function gitbprune() {
  git fetch -p
  git branch -vv | grep ': gone]' | grep -Ev "^\*" | awk '{ print $1; }' | xargs -r git branch -D
}

# Golang
export GOPATH="$HOME/go"
export PATH="$GOPATH/bin:$PATH"
[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"
export CGO_ENABLED=1

# Needed for golangci-lint
export PATH="/opt/homebrew/opt/diffutils/bin:$PATH"

# Github
export GITHUB_TOKEN=$(cat $HOME/.secret/ilaif_gh_token)
export NODE_AUTH_TOKEN=$(cat $HOME/.secret/ilaif_gh_token)

# Jira
export JIRA_API_TOKEN=$(cat $HOME/.secret/ilai_jira_token)

# NVM (Node JS)
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
nvm() {
  unset -f nvm
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --no-use # This loads nvm
  nvm $@
}

# Kubectl
if [ /usr/local/bin/kubectl ]; then source <(kubectl completion zsh); fi
export USE_GKE_GCLOUD_AUTH_PLUGIN=True

# Direnv
eval "$(direnv hook zsh)"

# Gcloud
source "/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
source "/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"

# Krew
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

# Dotnet
export PATH="$PATH:$HOME/.dotnet/tools"

# Rust
PATH="$HOME/.cargo/bin:$PATH"

# Python
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"
eval "$(pyenv init -)"

# Ruby
export PATH="$PATH:$HOME/.rvm/bin"
export PATH="$HOME/.gem/bin:$PATH"

# Github CLI Copilot
eval "$(github-copilot-cli alias -- "$0")"

# Load other aliases
[ -f "$HOME/.aliases" ] && source $HOME/.aliases

export PATH="/opt/homebrew/bin:$PATH"

if [[ "$PROFILING_ENABLED" == "1" ]]; then
  zprof; zmodload -u zsh/zprof
fi

### FILE END ###
